// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: db.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "db.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace prodisdb {
namespace protobuf {
class EmptyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Empty> {
} _Empty_default_instance_;
class SerializableDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Serializable> {
} _Serializable_default_instance_;
class PrimaryKeyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PrimaryKey> {
} _PrimaryKey_default_instance_;

namespace protobuf_db_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Serializable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Serializable, descriptor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Serializable, blob_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrimaryKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrimaryKey, descriptor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrimaryKey, uid_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Empty)},
  { 4, -1, sizeof(Serializable)},
  { 10, -1, sizeof(PrimaryKey)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Empty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Serializable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PrimaryKey_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "db.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _Empty_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Serializable_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _PrimaryKey_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Empty_default_instance_.DefaultConstruct();
  _Serializable_default_instance_.DefaultConstruct();
  _PrimaryKey_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\010db.proto\022\021prodisdb.protobuf\"\007\n\005Empty\"0"
      "\n\014Serializable\022\022\n\ndescriptor\030\001 \001(\t\022\014\n\004bl"
      "ob\030\002 \001(\014\"-\n\nPrimaryKey\022\022\n\ndescriptor\030\001 \001"
      "(\t\022\013\n\003uid\030\002 \001(\0142\234\002\n\006Prodis\022E\n\003Get\022\035.prod"
      "isdb.protobuf.PrimaryKey\032\037.prodisdb.prot"
      "obuf.Serializable\022C\n\006Create\022\037.prodisdb.p"
      "rotobuf.Serializable\032\030.prodisdb.protobuf"
      ".Empty\022A\n\006Delete\022\035.prodisdb.protobuf.Pri"
      "maryKey\032\030.prodisdb.protobuf.Empty\022C\n\006Upd"
      "ate\022\037.prodisdb.protobuf.Serializable\032\030.p"
      "rodisdb.protobuf.EmptyBR\n\025com.prodisdb.p"
      "rotobufZ\037gitlab.com/prodisdb/protobuf/db"
      "\242\002\003PDB\252\002\021ProdisDB.Protobufb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 514);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "db.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_db_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Empty::Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_db_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:prodisdb.protobuf.Empty)
}
Empty::Empty(const Empty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:prodisdb.protobuf.Empty)
}

void Empty::SharedCtor() {
  _cached_size_ = 0;
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:prodisdb.protobuf.Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
}

void Empty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Empty::descriptor() {
  protobuf_db_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_2eproto::file_level_metadata[0].descriptor;
}

const Empty& Empty::default_instance() {
  protobuf_db_2eproto::InitDefaults();
  return *internal_default_instance();
}

Empty* Empty::New(::google::protobuf::Arena* arena) const {
  Empty* n = new Empty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:prodisdb.protobuf.Empty)
}

bool Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prodisdb.protobuf.Empty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:prodisdb.protobuf.Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prodisdb.protobuf.Empty)
  return false;
#undef DO_
}

void Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prodisdb.protobuf.Empty)
  // @@protoc_insertion_point(serialize_end:prodisdb.protobuf.Empty)
}

::google::protobuf::uint8* Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:prodisdb.protobuf.Empty)
  // @@protoc_insertion_point(serialize_to_array_end:prodisdb.protobuf.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prodisdb.protobuf.Empty)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prodisdb.protobuf.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prodisdb.protobuf.Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prodisdb.protobuf.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prodisdb.protobuf.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prodisdb.protobuf.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prodisdb.protobuf.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::Swap(Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Empty::InternalSwap(Empty* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Empty::GetMetadata() const {
  protobuf_db_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Empty

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Serializable::kDescriptorFieldNumber;
const int Serializable::kBlobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Serializable::Serializable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_db_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:prodisdb.protobuf.Serializable)
}
Serializable::Serializable(const Serializable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  descriptor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.descriptor().size() > 0) {
    descriptor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.descriptor_);
  }
  blob_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.blob().size() > 0) {
    blob_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.blob_);
  }
  // @@protoc_insertion_point(copy_constructor:prodisdb.protobuf.Serializable)
}

void Serializable::SharedCtor() {
  descriptor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blob_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Serializable::~Serializable() {
  // @@protoc_insertion_point(destructor:prodisdb.protobuf.Serializable)
  SharedDtor();
}

void Serializable::SharedDtor() {
  descriptor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blob_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Serializable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Serializable::descriptor() {
  protobuf_db_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_2eproto::file_level_metadata[1].descriptor;
}

const Serializable& Serializable::default_instance() {
  protobuf_db_2eproto::InitDefaults();
  return *internal_default_instance();
}

Serializable* Serializable::New(::google::protobuf::Arena* arena) const {
  Serializable* n = new Serializable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Serializable::Clear() {
// @@protoc_insertion_point(message_clear_start:prodisdb.protobuf.Serializable)
  descriptor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blob_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Serializable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prodisdb.protobuf.Serializable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string descriptor = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_descriptor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->descriptor().data(), this->descriptor().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prodisdb.protobuf.Serializable.descriptor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes blob = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_blob()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prodisdb.protobuf.Serializable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prodisdb.protobuf.Serializable)
  return false;
#undef DO_
}

void Serializable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prodisdb.protobuf.Serializable)
  // string descriptor = 1;
  if (this->descriptor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->descriptor().data(), this->descriptor().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prodisdb.protobuf.Serializable.descriptor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->descriptor(), output);
  }

  // bytes blob = 2;
  if (this->blob().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->blob(), output);
  }

  // @@protoc_insertion_point(serialize_end:prodisdb.protobuf.Serializable)
}

::google::protobuf::uint8* Serializable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:prodisdb.protobuf.Serializable)
  // string descriptor = 1;
  if (this->descriptor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->descriptor().data(), this->descriptor().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prodisdb.protobuf.Serializable.descriptor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->descriptor(), target);
  }

  // bytes blob = 2;
  if (this->blob().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->blob(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:prodisdb.protobuf.Serializable)
  return target;
}

size_t Serializable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prodisdb.protobuf.Serializable)
  size_t total_size = 0;

  // string descriptor = 1;
  if (this->descriptor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->descriptor());
  }

  // bytes blob = 2;
  if (this->blob().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->blob());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Serializable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prodisdb.protobuf.Serializable)
  GOOGLE_DCHECK_NE(&from, this);
  const Serializable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Serializable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prodisdb.protobuf.Serializable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prodisdb.protobuf.Serializable)
    MergeFrom(*source);
  }
}

void Serializable::MergeFrom(const Serializable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prodisdb.protobuf.Serializable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.descriptor().size() > 0) {

    descriptor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.descriptor_);
  }
  if (from.blob().size() > 0) {

    blob_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.blob_);
  }
}

void Serializable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prodisdb.protobuf.Serializable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Serializable::CopyFrom(const Serializable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prodisdb.protobuf.Serializable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Serializable::IsInitialized() const {
  return true;
}

void Serializable::Swap(Serializable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Serializable::InternalSwap(Serializable* other) {
  descriptor_.Swap(&other->descriptor_);
  blob_.Swap(&other->blob_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Serializable::GetMetadata() const {
  protobuf_db_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Serializable

// string descriptor = 1;
void Serializable::clear_descriptor() {
  descriptor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Serializable::descriptor() const {
  // @@protoc_insertion_point(field_get:prodisdb.protobuf.Serializable.descriptor)
  return descriptor_.GetNoArena();
}
void Serializable::set_descriptor(const ::std::string& value) {
  
  descriptor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prodisdb.protobuf.Serializable.descriptor)
}
#if LANG_CXX11
void Serializable::set_descriptor(::std::string&& value) {
  
  descriptor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:prodisdb.protobuf.Serializable.descriptor)
}
#endif
void Serializable::set_descriptor(const char* value) {
  
  descriptor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prodisdb.protobuf.Serializable.descriptor)
}
void Serializable::set_descriptor(const char* value, size_t size) {
  
  descriptor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prodisdb.protobuf.Serializable.descriptor)
}
::std::string* Serializable::mutable_descriptor() {
  
  // @@protoc_insertion_point(field_mutable:prodisdb.protobuf.Serializable.descriptor)
  return descriptor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Serializable::release_descriptor() {
  // @@protoc_insertion_point(field_release:prodisdb.protobuf.Serializable.descriptor)
  
  return descriptor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Serializable::set_allocated_descriptor(::std::string* descriptor) {
  if (descriptor != NULL) {
    
  } else {
    
  }
  descriptor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), descriptor);
  // @@protoc_insertion_point(field_set_allocated:prodisdb.protobuf.Serializable.descriptor)
}

// bytes blob = 2;
void Serializable::clear_blob() {
  blob_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Serializable::blob() const {
  // @@protoc_insertion_point(field_get:prodisdb.protobuf.Serializable.blob)
  return blob_.GetNoArena();
}
void Serializable::set_blob(const ::std::string& value) {
  
  blob_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prodisdb.protobuf.Serializable.blob)
}
#if LANG_CXX11
void Serializable::set_blob(::std::string&& value) {
  
  blob_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:prodisdb.protobuf.Serializable.blob)
}
#endif
void Serializable::set_blob(const char* value) {
  
  blob_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prodisdb.protobuf.Serializable.blob)
}
void Serializable::set_blob(const void* value, size_t size) {
  
  blob_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prodisdb.protobuf.Serializable.blob)
}
::std::string* Serializable::mutable_blob() {
  
  // @@protoc_insertion_point(field_mutable:prodisdb.protobuf.Serializable.blob)
  return blob_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Serializable::release_blob() {
  // @@protoc_insertion_point(field_release:prodisdb.protobuf.Serializable.blob)
  
  return blob_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Serializable::set_allocated_blob(::std::string* blob) {
  if (blob != NULL) {
    
  } else {
    
  }
  blob_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), blob);
  // @@protoc_insertion_point(field_set_allocated:prodisdb.protobuf.Serializable.blob)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrimaryKey::kDescriptorFieldNumber;
const int PrimaryKey::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrimaryKey::PrimaryKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_db_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:prodisdb.protobuf.PrimaryKey)
}
PrimaryKey::PrimaryKey(const PrimaryKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  descriptor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.descriptor().size() > 0) {
    descriptor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.descriptor_);
  }
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uid().size() > 0) {
    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  // @@protoc_insertion_point(copy_constructor:prodisdb.protobuf.PrimaryKey)
}

void PrimaryKey::SharedCtor() {
  descriptor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PrimaryKey::~PrimaryKey() {
  // @@protoc_insertion_point(destructor:prodisdb.protobuf.PrimaryKey)
  SharedDtor();
}

void PrimaryKey::SharedDtor() {
  descriptor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PrimaryKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PrimaryKey::descriptor() {
  protobuf_db_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_2eproto::file_level_metadata[2].descriptor;
}

const PrimaryKey& PrimaryKey::default_instance() {
  protobuf_db_2eproto::InitDefaults();
  return *internal_default_instance();
}

PrimaryKey* PrimaryKey::New(::google::protobuf::Arena* arena) const {
  PrimaryKey* n = new PrimaryKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PrimaryKey::Clear() {
// @@protoc_insertion_point(message_clear_start:prodisdb.protobuf.PrimaryKey)
  descriptor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PrimaryKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prodisdb.protobuf.PrimaryKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string descriptor = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_descriptor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->descriptor().data(), this->descriptor().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prodisdb.protobuf.PrimaryKey.descriptor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes uid = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prodisdb.protobuf.PrimaryKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prodisdb.protobuf.PrimaryKey)
  return false;
#undef DO_
}

void PrimaryKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prodisdb.protobuf.PrimaryKey)
  // string descriptor = 1;
  if (this->descriptor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->descriptor().data(), this->descriptor().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prodisdb.protobuf.PrimaryKey.descriptor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->descriptor(), output);
  }

  // bytes uid = 2;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->uid(), output);
  }

  // @@protoc_insertion_point(serialize_end:prodisdb.protobuf.PrimaryKey)
}

::google::protobuf::uint8* PrimaryKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:prodisdb.protobuf.PrimaryKey)
  // string descriptor = 1;
  if (this->descriptor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->descriptor().data(), this->descriptor().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prodisdb.protobuf.PrimaryKey.descriptor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->descriptor(), target);
  }

  // bytes uid = 2;
  if (this->uid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->uid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:prodisdb.protobuf.PrimaryKey)
  return target;
}

size_t PrimaryKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prodisdb.protobuf.PrimaryKey)
  size_t total_size = 0;

  // string descriptor = 1;
  if (this->descriptor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->descriptor());
  }

  // bytes uid = 2;
  if (this->uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PrimaryKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prodisdb.protobuf.PrimaryKey)
  GOOGLE_DCHECK_NE(&from, this);
  const PrimaryKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrimaryKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prodisdb.protobuf.PrimaryKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prodisdb.protobuf.PrimaryKey)
    MergeFrom(*source);
  }
}

void PrimaryKey::MergeFrom(const PrimaryKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prodisdb.protobuf.PrimaryKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.descriptor().size() > 0) {

    descriptor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.descriptor_);
  }
  if (from.uid().size() > 0) {

    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
}

void PrimaryKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prodisdb.protobuf.PrimaryKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrimaryKey::CopyFrom(const PrimaryKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prodisdb.protobuf.PrimaryKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrimaryKey::IsInitialized() const {
  return true;
}

void PrimaryKey::Swap(PrimaryKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrimaryKey::InternalSwap(PrimaryKey* other) {
  descriptor_.Swap(&other->descriptor_);
  uid_.Swap(&other->uid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PrimaryKey::GetMetadata() const {
  protobuf_db_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_db_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PrimaryKey

// string descriptor = 1;
void PrimaryKey::clear_descriptor() {
  descriptor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PrimaryKey::descriptor() const {
  // @@protoc_insertion_point(field_get:prodisdb.protobuf.PrimaryKey.descriptor)
  return descriptor_.GetNoArena();
}
void PrimaryKey::set_descriptor(const ::std::string& value) {
  
  descriptor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prodisdb.protobuf.PrimaryKey.descriptor)
}
#if LANG_CXX11
void PrimaryKey::set_descriptor(::std::string&& value) {
  
  descriptor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:prodisdb.protobuf.PrimaryKey.descriptor)
}
#endif
void PrimaryKey::set_descriptor(const char* value) {
  
  descriptor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prodisdb.protobuf.PrimaryKey.descriptor)
}
void PrimaryKey::set_descriptor(const char* value, size_t size) {
  
  descriptor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prodisdb.protobuf.PrimaryKey.descriptor)
}
::std::string* PrimaryKey::mutable_descriptor() {
  
  // @@protoc_insertion_point(field_mutable:prodisdb.protobuf.PrimaryKey.descriptor)
  return descriptor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrimaryKey::release_descriptor() {
  // @@protoc_insertion_point(field_release:prodisdb.protobuf.PrimaryKey.descriptor)
  
  return descriptor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrimaryKey::set_allocated_descriptor(::std::string* descriptor) {
  if (descriptor != NULL) {
    
  } else {
    
  }
  descriptor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), descriptor);
  // @@protoc_insertion_point(field_set_allocated:prodisdb.protobuf.PrimaryKey.descriptor)
}

// bytes uid = 2;
void PrimaryKey::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PrimaryKey::uid() const {
  // @@protoc_insertion_point(field_get:prodisdb.protobuf.PrimaryKey.uid)
  return uid_.GetNoArena();
}
void PrimaryKey::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prodisdb.protobuf.PrimaryKey.uid)
}
#if LANG_CXX11
void PrimaryKey::set_uid(::std::string&& value) {
  
  uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:prodisdb.protobuf.PrimaryKey.uid)
}
#endif
void PrimaryKey::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prodisdb.protobuf.PrimaryKey.uid)
}
void PrimaryKey::set_uid(const void* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prodisdb.protobuf.PrimaryKey.uid)
}
::std::string* PrimaryKey::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:prodisdb.protobuf.PrimaryKey.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PrimaryKey::release_uid() {
  // @@protoc_insertion_point(field_release:prodisdb.protobuf.PrimaryKey.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PrimaryKey::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:prodisdb.protobuf.PrimaryKey.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace prodisdb

// @@protoc_insertion_point(global_scope)
