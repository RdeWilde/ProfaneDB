// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: db.proto

#ifndef PROTOBUF_db_2eproto__INCLUDED
#define PROTOBUF_db_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace prodisdb {
namespace protobuf {
class Empty;
class EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class PrimaryKey;
class PrimaryKeyDefaultTypeInternal;
extern PrimaryKeyDefaultTypeInternal _PrimaryKey_default_instance_;
class Serializable;
class SerializableDefaultTypeInternal;
extern SerializableDefaultTypeInternal _Serializable_default_instance_;
}  // namespace protobuf
}  // namespace prodisdb

namespace prodisdb {
namespace protobuf {

namespace protobuf_db_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_db_2eproto

// ===================================================================

class Empty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prodisdb.protobuf.Empty) */ {
 public:
  Empty();
  virtual ~Empty();

  Empty(const Empty& from);

  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Empty& default_instance();

  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
               &_Empty_default_instance_);
  }

  void Swap(Empty* other);

  // implements Message ----------------------------------------------

  inline Empty* New() const PROTOBUF_FINAL { return New(NULL); }

  Empty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Empty& from);
  void MergeFrom(const Empty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Empty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:prodisdb.protobuf.Empty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_db_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Serializable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prodisdb.protobuf.Serializable) */ {
 public:
  Serializable();
  virtual ~Serializable();

  Serializable(const Serializable& from);

  inline Serializable& operator=(const Serializable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Serializable& default_instance();

  static inline const Serializable* internal_default_instance() {
    return reinterpret_cast<const Serializable*>(
               &_Serializable_default_instance_);
  }

  void Swap(Serializable* other);

  // implements Message ----------------------------------------------

  inline Serializable* New() const PROTOBUF_FINAL { return New(NULL); }

  Serializable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Serializable& from);
  void MergeFrom(const Serializable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Serializable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string descriptor = 1;
  void clear_descriptor();
  static const int kDescriptorFieldNumber = 1;
  const ::std::string& descriptor() const;
  void set_descriptor(const ::std::string& value);
  #if LANG_CXX11
  void set_descriptor(::std::string&& value);
  #endif
  void set_descriptor(const char* value);
  void set_descriptor(const char* value, size_t size);
  ::std::string* mutable_descriptor();
  ::std::string* release_descriptor();
  void set_allocated_descriptor(::std::string* descriptor);

  // bytes blob = 2;
  void clear_blob();
  static const int kBlobFieldNumber = 2;
  const ::std::string& blob() const;
  void set_blob(const ::std::string& value);
  #if LANG_CXX11
  void set_blob(::std::string&& value);
  #endif
  void set_blob(const char* value);
  void set_blob(const void* value, size_t size);
  ::std::string* mutable_blob();
  ::std::string* release_blob();
  void set_allocated_blob(::std::string* blob);

  // @@protoc_insertion_point(class_scope:prodisdb.protobuf.Serializable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr descriptor_;
  ::google::protobuf::internal::ArenaStringPtr blob_;
  mutable int _cached_size_;
  friend struct  protobuf_db_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PrimaryKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prodisdb.protobuf.PrimaryKey) */ {
 public:
  PrimaryKey();
  virtual ~PrimaryKey();

  PrimaryKey(const PrimaryKey& from);

  inline PrimaryKey& operator=(const PrimaryKey& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PrimaryKey& default_instance();

  static inline const PrimaryKey* internal_default_instance() {
    return reinterpret_cast<const PrimaryKey*>(
               &_PrimaryKey_default_instance_);
  }

  void Swap(PrimaryKey* other);

  // implements Message ----------------------------------------------

  inline PrimaryKey* New() const PROTOBUF_FINAL { return New(NULL); }

  PrimaryKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PrimaryKey& from);
  void MergeFrom(const PrimaryKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PrimaryKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string descriptor = 1;
  void clear_descriptor();
  static const int kDescriptorFieldNumber = 1;
  const ::std::string& descriptor() const;
  void set_descriptor(const ::std::string& value);
  #if LANG_CXX11
  void set_descriptor(::std::string&& value);
  #endif
  void set_descriptor(const char* value);
  void set_descriptor(const char* value, size_t size);
  ::std::string* mutable_descriptor();
  ::std::string* release_descriptor();
  void set_allocated_descriptor(::std::string* descriptor);

  // bytes uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  #if LANG_CXX11
  void set_uid(::std::string&& value);
  #endif
  void set_uid(const char* value);
  void set_uid(const void* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // @@protoc_insertion_point(class_scope:prodisdb.protobuf.PrimaryKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr descriptor_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  mutable int _cached_size_;
  friend struct  protobuf_db_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Empty

// -------------------------------------------------------------------

// Serializable

// string descriptor = 1;
inline void Serializable::clear_descriptor() {
  descriptor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Serializable::descriptor() const {
  // @@protoc_insertion_point(field_get:prodisdb.protobuf.Serializable.descriptor)
  return descriptor_.GetNoArena();
}
inline void Serializable::set_descriptor(const ::std::string& value) {
  
  descriptor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prodisdb.protobuf.Serializable.descriptor)
}
#if LANG_CXX11
inline void Serializable::set_descriptor(::std::string&& value) {
  
  descriptor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:prodisdb.protobuf.Serializable.descriptor)
}
#endif
inline void Serializable::set_descriptor(const char* value) {
  
  descriptor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prodisdb.protobuf.Serializable.descriptor)
}
inline void Serializable::set_descriptor(const char* value, size_t size) {
  
  descriptor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prodisdb.protobuf.Serializable.descriptor)
}
inline ::std::string* Serializable::mutable_descriptor() {
  
  // @@protoc_insertion_point(field_mutable:prodisdb.protobuf.Serializable.descriptor)
  return descriptor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Serializable::release_descriptor() {
  // @@protoc_insertion_point(field_release:prodisdb.protobuf.Serializable.descriptor)
  
  return descriptor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Serializable::set_allocated_descriptor(::std::string* descriptor) {
  if (descriptor != NULL) {
    
  } else {
    
  }
  descriptor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), descriptor);
  // @@protoc_insertion_point(field_set_allocated:prodisdb.protobuf.Serializable.descriptor)
}

// bytes blob = 2;
inline void Serializable::clear_blob() {
  blob_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Serializable::blob() const {
  // @@protoc_insertion_point(field_get:prodisdb.protobuf.Serializable.blob)
  return blob_.GetNoArena();
}
inline void Serializable::set_blob(const ::std::string& value) {
  
  blob_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prodisdb.protobuf.Serializable.blob)
}
#if LANG_CXX11
inline void Serializable::set_blob(::std::string&& value) {
  
  blob_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:prodisdb.protobuf.Serializable.blob)
}
#endif
inline void Serializable::set_blob(const char* value) {
  
  blob_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prodisdb.protobuf.Serializable.blob)
}
inline void Serializable::set_blob(const void* value, size_t size) {
  
  blob_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prodisdb.protobuf.Serializable.blob)
}
inline ::std::string* Serializable::mutable_blob() {
  
  // @@protoc_insertion_point(field_mutable:prodisdb.protobuf.Serializable.blob)
  return blob_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Serializable::release_blob() {
  // @@protoc_insertion_point(field_release:prodisdb.protobuf.Serializable.blob)
  
  return blob_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Serializable::set_allocated_blob(::std::string* blob) {
  if (blob != NULL) {
    
  } else {
    
  }
  blob_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), blob);
  // @@protoc_insertion_point(field_set_allocated:prodisdb.protobuf.Serializable.blob)
}

// -------------------------------------------------------------------

// PrimaryKey

// string descriptor = 1;
inline void PrimaryKey::clear_descriptor() {
  descriptor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PrimaryKey::descriptor() const {
  // @@protoc_insertion_point(field_get:prodisdb.protobuf.PrimaryKey.descriptor)
  return descriptor_.GetNoArena();
}
inline void PrimaryKey::set_descriptor(const ::std::string& value) {
  
  descriptor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prodisdb.protobuf.PrimaryKey.descriptor)
}
#if LANG_CXX11
inline void PrimaryKey::set_descriptor(::std::string&& value) {
  
  descriptor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:prodisdb.protobuf.PrimaryKey.descriptor)
}
#endif
inline void PrimaryKey::set_descriptor(const char* value) {
  
  descriptor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prodisdb.protobuf.PrimaryKey.descriptor)
}
inline void PrimaryKey::set_descriptor(const char* value, size_t size) {
  
  descriptor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prodisdb.protobuf.PrimaryKey.descriptor)
}
inline ::std::string* PrimaryKey::mutable_descriptor() {
  
  // @@protoc_insertion_point(field_mutable:prodisdb.protobuf.PrimaryKey.descriptor)
  return descriptor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrimaryKey::release_descriptor() {
  // @@protoc_insertion_point(field_release:prodisdb.protobuf.PrimaryKey.descriptor)
  
  return descriptor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrimaryKey::set_allocated_descriptor(::std::string* descriptor) {
  if (descriptor != NULL) {
    
  } else {
    
  }
  descriptor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), descriptor);
  // @@protoc_insertion_point(field_set_allocated:prodisdb.protobuf.PrimaryKey.descriptor)
}

// bytes uid = 2;
inline void PrimaryKey::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PrimaryKey::uid() const {
  // @@protoc_insertion_point(field_get:prodisdb.protobuf.PrimaryKey.uid)
  return uid_.GetNoArena();
}
inline void PrimaryKey::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prodisdb.protobuf.PrimaryKey.uid)
}
#if LANG_CXX11
inline void PrimaryKey::set_uid(::std::string&& value) {
  
  uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:prodisdb.protobuf.PrimaryKey.uid)
}
#endif
inline void PrimaryKey::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prodisdb.protobuf.PrimaryKey.uid)
}
inline void PrimaryKey::set_uid(const void* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prodisdb.protobuf.PrimaryKey.uid)
}
inline ::std::string* PrimaryKey::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:prodisdb.protobuf.PrimaryKey.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrimaryKey::release_uid() {
  // @@protoc_insertion_point(field_release:prodisdb.protobuf.PrimaryKey.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrimaryKey::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:prodisdb.protobuf.PrimaryKey.uid)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace protobuf
}  // namespace prodisdb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_db_2eproto__INCLUDED
