// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: profanedb/protobuf/db.proto

#include "profanedb/protobuf/db.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace profanedb {
namespace protobuf {
class GetReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetReq>
      _instance;
} _GetReq_default_instance_;
class GetRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetResp>
      _instance;
} _GetResp_default_instance_;
class PutReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PutReq>
      _instance;
} _PutReq_default_instance_;
class PutRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PutResp>
      _instance;
} _PutResp_default_instance_;
class DelReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DelReq>
      _instance;
} _DelReq_default_instance_;
class DelRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DelResp>
      _instance;
} _DelResp_default_instance_;
}  // namespace protobuf
}  // namespace profanedb
namespace protobuf_profanedb_2fprotobuf_2fdb_2eproto {
void InitDefaultsGetReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_profanedb_2fprotobuf_2fstorage_2eproto::InitDefaultsKey();
  {
    void* ptr = &::profanedb::protobuf::_GetReq_default_instance_;
    new (ptr) ::profanedb::protobuf::GetReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::profanedb::protobuf::GetReq::InitAsDefaultInstance();
}

void InitDefaultsGetReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetReqImpl);
}

void InitDefaultsGetRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::profanedb::protobuf::_GetResp_default_instance_;
    new (ptr) ::profanedb::protobuf::GetResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::profanedb::protobuf::GetResp::InitAsDefaultInstance();
}

void InitDefaultsGetResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetRespImpl);
}

void InitDefaultsPutReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::profanedb::protobuf::_PutReq_default_instance_;
    new (ptr) ::profanedb::protobuf::PutReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::profanedb::protobuf::PutReq::InitAsDefaultInstance();
}

void InitDefaultsPutReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPutReqImpl);
}

void InitDefaultsPutRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_profanedb_2fprotobuf_2fstorage_2eproto::InitDefaultsKey();
  {
    void* ptr = &::profanedb::protobuf::_PutResp_default_instance_;
    new (ptr) ::profanedb::protobuf::PutResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::profanedb::protobuf::PutResp::InitAsDefaultInstance();
}

void InitDefaultsPutResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPutRespImpl);
}

void InitDefaultsDelReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_profanedb_2fprotobuf_2fstorage_2eproto::InitDefaultsKey();
  {
    void* ptr = &::profanedb::protobuf::_DelReq_default_instance_;
    new (ptr) ::profanedb::protobuf::DelReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::profanedb::protobuf::DelReq::InitAsDefaultInstance();
}

void InitDefaultsDelReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDelReqImpl);
}

void InitDefaultsDelRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::profanedb::protobuf::_DelResp_default_instance_;
    new (ptr) ::profanedb::protobuf::DelResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::profanedb::protobuf::DelResp::InitAsDefaultInstance();
}

void InitDefaultsDelResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDelRespImpl);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::profanedb::protobuf::GetReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::profanedb::protobuf::GetReq, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::profanedb::protobuf::GetResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::profanedb::protobuf::GetResp, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::profanedb::protobuf::PutReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::profanedb::protobuf::PutReq, serializable_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::profanedb::protobuf::PutResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::profanedb::protobuf::PutResp, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::profanedb::protobuf::DelReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::profanedb::protobuf::DelReq, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::profanedb::protobuf::DelResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::profanedb::protobuf::GetReq)},
  { 6, -1, sizeof(::profanedb::protobuf::GetResp)},
  { 12, -1, sizeof(::profanedb::protobuf::PutReq)},
  { 18, -1, sizeof(::profanedb::protobuf::PutResp)},
  { 24, -1, sizeof(::profanedb::protobuf::DelReq)},
  { 30, -1, sizeof(::profanedb::protobuf::DelResp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::profanedb::protobuf::_GetReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::profanedb::protobuf::_GetResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::profanedb::protobuf::_PutReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::profanedb::protobuf::_PutResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::profanedb::protobuf::_DelReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::profanedb::protobuf::_DelResp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "profanedb/protobuf/db.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033profanedb/protobuf/db.proto\022\022profanedb"
      ".protobuf\032\031google/protobuf/any.proto\032 pr"
      "ofanedb/protobuf/storage.proto\".\n\006GetReq"
      "\022$\n\003key\030\001 \001(\0132\027.profanedb.protobuf.Key\"0"
      "\n\007GetResp\022%\n\007message\030\001 \001(\0132\024.google.prot"
      "obuf.Any\"4\n\006PutReq\022*\n\014serializable\030\001 \001(\013"
      "2\024.google.protobuf.Any\"/\n\007PutResp\022$\n\003key"
      "\030\001 \001(\0132\027.profanedb.protobuf.Key\".\n\006DelRe"
      "q\022$\n\003key\030\001 \001(\0132\027.profanedb.protobuf.Key\""
      "\t\n\007DelResp2\307\001\n\002Db\022>\n\003Get\022\032.profanedb.pro"
      "tobuf.GetReq\032\033.profanedb.protobuf.GetRes"
      "p\022>\n\003Put\022\032.profanedb.protobuf.PutReq\032\033.p"
      "rofanedb.protobuf.PutResp\022A\n\006Delete\022\032.pr"
      "ofanedb.protobuf.DelReq\032\033.profanedb.prot"
      "obuf.DelRespBU\n\026com.profanedb.protobufZ "
      "gitlab.com/profanedb/protobuf/db\242\002\003PDB\252\002"
      "\022ProfaneDB.Protobufb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 667);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "profanedb/protobuf/db.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protobuf_profanedb_2fprotobuf_2fstorage_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_profanedb_2fprotobuf_2fdb_2eproto
namespace profanedb {
namespace protobuf {

// ===================================================================

void GetReq::InitAsDefaultInstance() {
  ::profanedb::protobuf::_GetReq_default_instance_._instance.get_mutable()->key_ = const_cast< ::profanedb::protobuf::Key*>(
      ::profanedb::protobuf::Key::internal_default_instance());
}
void GetReq::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetReq::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetReq::GetReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::InitDefaultsGetReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:profanedb.protobuf.GetReq)
}
GetReq::GetReq(const GetReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::profanedb::protobuf::Key(*from.key_);
  } else {
    key_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:profanedb.protobuf.GetReq)
}

void GetReq::SharedCtor() {
  key_ = NULL;
  _cached_size_ = 0;
}

GetReq::~GetReq() {
  // @@protoc_insertion_point(destructor:profanedb.protobuf.GetReq)
  SharedDtor();
}

void GetReq::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
}

void GetReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetReq::descriptor() {
  ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetReq& GetReq::default_instance() {
  ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::InitDefaultsGetReq();
  return *internal_default_instance();
}

GetReq* GetReq::New(::google::protobuf::Arena* arena) const {
  GetReq* n = new GetReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetReq::Clear() {
// @@protoc_insertion_point(message_clear_start:profanedb.protobuf.GetReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  _internal_metadata_.Clear();
}

bool GetReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:profanedb.protobuf.GetReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .profanedb.protobuf.Key key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:profanedb.protobuf.GetReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:profanedb.protobuf.GetReq)
  return false;
#undef DO_
}

void GetReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:profanedb.protobuf.GetReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .profanedb.protobuf.Key key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->key_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:profanedb.protobuf.GetReq)
}

::google::protobuf::uint8* GetReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:profanedb.protobuf.GetReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .profanedb.protobuf.Key key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->key_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:profanedb.protobuf.GetReq)
  return target;
}

size_t GetReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:profanedb.protobuf.GetReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .profanedb.protobuf.Key key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->key_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:profanedb.protobuf.GetReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:profanedb.protobuf.GetReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:profanedb.protobuf.GetReq)
    MergeFrom(*source);
  }
}

void GetReq::MergeFrom(const GetReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:profanedb.protobuf.GetReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::profanedb::protobuf::Key::MergeFrom(from.key());
  }
}

void GetReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:profanedb.protobuf.GetReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetReq::CopyFrom(const GetReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:profanedb.protobuf.GetReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetReq::IsInitialized() const {
  return true;
}

void GetReq::Swap(GetReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetReq::InternalSwap(GetReq* other) {
  using std::swap;
  swap(key_, other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetReq::GetMetadata() const {
  protobuf_profanedb_2fprotobuf_2fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetResp::InitAsDefaultInstance() {
  ::profanedb::protobuf::_GetResp_default_instance_._instance.get_mutable()->message_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void GetResp::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetResp::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetResp::GetResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::InitDefaultsGetResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:profanedb.protobuf.GetResp)
}
GetResp::GetResp(const GetResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_message()) {
    message_ = new ::google::protobuf::Any(*from.message_);
  } else {
    message_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:profanedb.protobuf.GetResp)
}

void GetResp::SharedCtor() {
  message_ = NULL;
  _cached_size_ = 0;
}

GetResp::~GetResp() {
  // @@protoc_insertion_point(destructor:profanedb.protobuf.GetResp)
  SharedDtor();
}

void GetResp::SharedDtor() {
  if (this != internal_default_instance()) delete message_;
}

void GetResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetResp::descriptor() {
  ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetResp& GetResp::default_instance() {
  ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::InitDefaultsGetResp();
  return *internal_default_instance();
}

GetResp* GetResp::New(::google::protobuf::Arena* arena) const {
  GetResp* n = new GetResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetResp::Clear() {
// @@protoc_insertion_point(message_clear_start:profanedb.protobuf.GetResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
  _internal_metadata_.Clear();
}

bool GetResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:profanedb.protobuf.GetResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Any message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:profanedb.protobuf.GetResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:profanedb.protobuf.GetResp)
  return false;
#undef DO_
}

void GetResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:profanedb.protobuf.GetResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any message = 1;
  if (this->has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->message_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:profanedb.protobuf.GetResp)
}

::google::protobuf::uint8* GetResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:profanedb.protobuf.GetResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any message = 1;
  if (this->has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->message_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:profanedb.protobuf.GetResp)
  return target;
}

size_t GetResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:profanedb.protobuf.GetResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Any message = 1;
  if (this->has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->message_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:profanedb.protobuf.GetResp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:profanedb.protobuf.GetResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:profanedb.protobuf.GetResp)
    MergeFrom(*source);
  }
}

void GetResp::MergeFrom(const GetResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:profanedb.protobuf.GetResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_message()) {
    mutable_message()->::google::protobuf::Any::MergeFrom(from.message());
  }
}

void GetResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:profanedb.protobuf.GetResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResp::CopyFrom(const GetResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:profanedb.protobuf.GetResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResp::IsInitialized() const {
  return true;
}

void GetResp::Swap(GetResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetResp::InternalSwap(GetResp* other) {
  using std::swap;
  swap(message_, other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetResp::GetMetadata() const {
  protobuf_profanedb_2fprotobuf_2fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PutReq::InitAsDefaultInstance() {
  ::profanedb::protobuf::_PutReq_default_instance_._instance.get_mutable()->serializable_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void PutReq::clear_serializable() {
  if (GetArenaNoVirtual() == NULL && serializable_ != NULL) {
    delete serializable_;
  }
  serializable_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutReq::kSerializableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutReq::PutReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::InitDefaultsPutReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:profanedb.protobuf.PutReq)
}
PutReq::PutReq(const PutReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_serializable()) {
    serializable_ = new ::google::protobuf::Any(*from.serializable_);
  } else {
    serializable_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:profanedb.protobuf.PutReq)
}

void PutReq::SharedCtor() {
  serializable_ = NULL;
  _cached_size_ = 0;
}

PutReq::~PutReq() {
  // @@protoc_insertion_point(destructor:profanedb.protobuf.PutReq)
  SharedDtor();
}

void PutReq::SharedDtor() {
  if (this != internal_default_instance()) delete serializable_;
}

void PutReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutReq::descriptor() {
  ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PutReq& PutReq::default_instance() {
  ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::InitDefaultsPutReq();
  return *internal_default_instance();
}

PutReq* PutReq::New(::google::protobuf::Arena* arena) const {
  PutReq* n = new PutReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PutReq::Clear() {
// @@protoc_insertion_point(message_clear_start:profanedb.protobuf.PutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && serializable_ != NULL) {
    delete serializable_;
  }
  serializable_ = NULL;
  _internal_metadata_.Clear();
}

bool PutReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:profanedb.protobuf.PutReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Any serializable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_serializable()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:profanedb.protobuf.PutReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:profanedb.protobuf.PutReq)
  return false;
#undef DO_
}

void PutReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:profanedb.protobuf.PutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any serializable = 1;
  if (this->has_serializable()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->serializable_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:profanedb.protobuf.PutReq)
}

::google::protobuf::uint8* PutReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:profanedb.protobuf.PutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any serializable = 1;
  if (this->has_serializable()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->serializable_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:profanedb.protobuf.PutReq)
  return target;
}

size_t PutReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:profanedb.protobuf.PutReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Any serializable = 1;
  if (this->has_serializable()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->serializable_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:profanedb.protobuf.PutReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PutReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PutReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:profanedb.protobuf.PutReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:profanedb.protobuf.PutReq)
    MergeFrom(*source);
  }
}

void PutReq::MergeFrom(const PutReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:profanedb.protobuf.PutReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_serializable()) {
    mutable_serializable()->::google::protobuf::Any::MergeFrom(from.serializable());
  }
}

void PutReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:profanedb.protobuf.PutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutReq::CopyFrom(const PutReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:profanedb.protobuf.PutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutReq::IsInitialized() const {
  return true;
}

void PutReq::Swap(PutReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutReq::InternalSwap(PutReq* other) {
  using std::swap;
  swap(serializable_, other->serializable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PutReq::GetMetadata() const {
  protobuf_profanedb_2fprotobuf_2fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PutResp::InitAsDefaultInstance() {
  ::profanedb::protobuf::_PutResp_default_instance_._instance.get_mutable()->key_ = const_cast< ::profanedb::protobuf::Key*>(
      ::profanedb::protobuf::Key::internal_default_instance());
}
void PutResp::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutResp::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutResp::PutResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::InitDefaultsPutResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:profanedb.protobuf.PutResp)
}
PutResp::PutResp(const PutResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::profanedb::protobuf::Key(*from.key_);
  } else {
    key_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:profanedb.protobuf.PutResp)
}

void PutResp::SharedCtor() {
  key_ = NULL;
  _cached_size_ = 0;
}

PutResp::~PutResp() {
  // @@protoc_insertion_point(destructor:profanedb.protobuf.PutResp)
  SharedDtor();
}

void PutResp::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
}

void PutResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutResp::descriptor() {
  ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PutResp& PutResp::default_instance() {
  ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::InitDefaultsPutResp();
  return *internal_default_instance();
}

PutResp* PutResp::New(::google::protobuf::Arena* arena) const {
  PutResp* n = new PutResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PutResp::Clear() {
// @@protoc_insertion_point(message_clear_start:profanedb.protobuf.PutResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  _internal_metadata_.Clear();
}

bool PutResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:profanedb.protobuf.PutResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .profanedb.protobuf.Key key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:profanedb.protobuf.PutResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:profanedb.protobuf.PutResp)
  return false;
#undef DO_
}

void PutResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:profanedb.protobuf.PutResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .profanedb.protobuf.Key key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->key_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:profanedb.protobuf.PutResp)
}

::google::protobuf::uint8* PutResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:profanedb.protobuf.PutResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .profanedb.protobuf.Key key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->key_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:profanedb.protobuf.PutResp)
  return target;
}

size_t PutResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:profanedb.protobuf.PutResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .profanedb.protobuf.Key key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->key_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:profanedb.protobuf.PutResp)
  GOOGLE_DCHECK_NE(&from, this);
  const PutResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PutResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:profanedb.protobuf.PutResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:profanedb.protobuf.PutResp)
    MergeFrom(*source);
  }
}

void PutResp::MergeFrom(const PutResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:profanedb.protobuf.PutResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::profanedb::protobuf::Key::MergeFrom(from.key());
  }
}

void PutResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:profanedb.protobuf.PutResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutResp::CopyFrom(const PutResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:profanedb.protobuf.PutResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutResp::IsInitialized() const {
  return true;
}

void PutResp::Swap(PutResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutResp::InternalSwap(PutResp* other) {
  using std::swap;
  swap(key_, other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PutResp::GetMetadata() const {
  protobuf_profanedb_2fprotobuf_2fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DelReq::InitAsDefaultInstance() {
  ::profanedb::protobuf::_DelReq_default_instance_._instance.get_mutable()->key_ = const_cast< ::profanedb::protobuf::Key*>(
      ::profanedb::protobuf::Key::internal_default_instance());
}
void DelReq::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelReq::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelReq::DelReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::InitDefaultsDelReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:profanedb.protobuf.DelReq)
}
DelReq::DelReq(const DelReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::profanedb::protobuf::Key(*from.key_);
  } else {
    key_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:profanedb.protobuf.DelReq)
}

void DelReq::SharedCtor() {
  key_ = NULL;
  _cached_size_ = 0;
}

DelReq::~DelReq() {
  // @@protoc_insertion_point(destructor:profanedb.protobuf.DelReq)
  SharedDtor();
}

void DelReq::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
}

void DelReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelReq::descriptor() {
  ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelReq& DelReq::default_instance() {
  ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::InitDefaultsDelReq();
  return *internal_default_instance();
}

DelReq* DelReq::New(::google::protobuf::Arena* arena) const {
  DelReq* n = new DelReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelReq::Clear() {
// @@protoc_insertion_point(message_clear_start:profanedb.protobuf.DelReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  _internal_metadata_.Clear();
}

bool DelReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:profanedb.protobuf.DelReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .profanedb.protobuf.Key key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:profanedb.protobuf.DelReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:profanedb.protobuf.DelReq)
  return false;
#undef DO_
}

void DelReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:profanedb.protobuf.DelReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .profanedb.protobuf.Key key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->key_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:profanedb.protobuf.DelReq)
}

::google::protobuf::uint8* DelReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:profanedb.protobuf.DelReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .profanedb.protobuf.Key key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->key_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:profanedb.protobuf.DelReq)
  return target;
}

size_t DelReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:profanedb.protobuf.DelReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .profanedb.protobuf.Key key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->key_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:profanedb.protobuf.DelReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DelReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:profanedb.protobuf.DelReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:profanedb.protobuf.DelReq)
    MergeFrom(*source);
  }
}

void DelReq::MergeFrom(const DelReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:profanedb.protobuf.DelReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::profanedb::protobuf::Key::MergeFrom(from.key());
  }
}

void DelReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:profanedb.protobuf.DelReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelReq::CopyFrom(const DelReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:profanedb.protobuf.DelReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelReq::IsInitialized() const {
  return true;
}

void DelReq::Swap(DelReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelReq::InternalSwap(DelReq* other) {
  using std::swap;
  swap(key_, other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelReq::GetMetadata() const {
  protobuf_profanedb_2fprotobuf_2fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DelResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelResp::DelResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::InitDefaultsDelResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:profanedb.protobuf.DelResp)
}
DelResp::DelResp(const DelResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:profanedb.protobuf.DelResp)
}

void DelResp::SharedCtor() {
  _cached_size_ = 0;
}

DelResp::~DelResp() {
  // @@protoc_insertion_point(destructor:profanedb.protobuf.DelResp)
  SharedDtor();
}

void DelResp::SharedDtor() {
}

void DelResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelResp::descriptor() {
  ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelResp& DelResp::default_instance() {
  ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::InitDefaultsDelResp();
  return *internal_default_instance();
}

DelResp* DelResp::New(::google::protobuf::Arena* arena) const {
  DelResp* n = new DelResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelResp::Clear() {
// @@protoc_insertion_point(message_clear_start:profanedb.protobuf.DelResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DelResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:profanedb.protobuf.DelResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:profanedb.protobuf.DelResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:profanedb.protobuf.DelResp)
  return false;
#undef DO_
}

void DelResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:profanedb.protobuf.DelResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:profanedb.protobuf.DelResp)
}

::google::protobuf::uint8* DelResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:profanedb.protobuf.DelResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:profanedb.protobuf.DelResp)
  return target;
}

size_t DelResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:profanedb.protobuf.DelResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:profanedb.protobuf.DelResp)
  GOOGLE_DCHECK_NE(&from, this);
  const DelResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:profanedb.protobuf.DelResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:profanedb.protobuf.DelResp)
    MergeFrom(*source);
  }
}

void DelResp::MergeFrom(const DelResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:profanedb.protobuf.DelResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DelResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:profanedb.protobuf.DelResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelResp::CopyFrom(const DelResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:profanedb.protobuf.DelResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelResp::IsInitialized() const {
  return true;
}

void DelResp::Swap(DelResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelResp::InternalSwap(DelResp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelResp::GetMetadata() const {
  protobuf_profanedb_2fprotobuf_2fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_profanedb_2fprotobuf_2fdb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace profanedb

// @@protoc_insertion_point(global_scope)
