// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: profanedb/protobuf/storage.proto

#include "profanedb/protobuf/storage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace profanedb {
namespace protobuf {
class KeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Key>
      _instance;
} _Key_default_instance_;
class StorableMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StorableMessage>
      _instance;
} _StorableMessage_default_instance_;
class MessageTreeNodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageTreeNode>
      _instance;
} _MessageTreeNode_default_instance_;
}  // namespace protobuf
}  // namespace profanedb
namespace protobuf_profanedb_2fprotobuf_2fstorage_2eproto {
void InitDefaultsKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::profanedb::protobuf::_Key_default_instance_;
    new (ptr) ::profanedb::protobuf::Key();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::profanedb::protobuf::Key::InitAsDefaultInstance();
}

void InitDefaultsKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsKeyImpl);
}

void InitDefaultsStorableMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_profanedb_2fprotobuf_2fstorage_2eproto::InitDefaultsKey();
  protobuf_google_2fprotobuf_2fany_2eproto::InitDefaultsAny();
  {
    void* ptr = &::profanedb::protobuf::_StorableMessage_default_instance_;
    new (ptr) ::profanedb::protobuf::StorableMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::profanedb::protobuf::StorableMessage::InitAsDefaultInstance();
}

void InitDefaultsStorableMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStorableMessageImpl);
}

void InitDefaultsMessageTreeNodeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_profanedb_2fprotobuf_2fstorage_2eproto::InitDefaultsStorableMessage();
  {
    void* ptr = &::profanedb::protobuf::_MessageTreeNode_default_instance_;
    new (ptr) ::profanedb::protobuf::MessageTreeNode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::profanedb::protobuf::MessageTreeNode::InitAsDefaultInstance();
}

void InitDefaultsMessageTreeNode() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageTreeNodeImpl);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::profanedb::protobuf::Key, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::profanedb::protobuf::Key, message_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::profanedb::protobuf::Key, field_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::profanedb::protobuf::Key, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::profanedb::protobuf::StorableMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::profanedb::protobuf::StorableMessage, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::profanedb::protobuf::StorableMessage, payload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::profanedb::protobuf::MessageTreeNode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::profanedb::protobuf::MessageTreeNode, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::profanedb::protobuf::MessageTreeNode, children_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::profanedb::protobuf::Key)},
  { 8, -1, sizeof(::profanedb::protobuf::StorableMessage)},
  { 15, -1, sizeof(::profanedb::protobuf::MessageTreeNode)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::profanedb::protobuf::_Key_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::profanedb::protobuf::_StorableMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::profanedb::protobuf::_MessageTreeNode_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "profanedb/protobuf/storage.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n profanedb/protobuf/storage.proto\022\022prof"
      "anedb.protobuf\032\031google/protobuf/any.prot"
      "o\"9\n\003Key\022\024\n\014message_type\030\001 \001(\t\022\r\n\005field\030"
      "\002 \001(\t\022\r\n\005value\030\003 \001(\014\"^\n\017StorableMessage\022"
      "$\n\003key\030\001 \001(\0132\027.profanedb.protobuf.Key\022%\n"
      "\007payload\030\002 \001(\0132\024.google.protobuf.Any\"~\n\017"
      "MessageTreeNode\0224\n\007message\030\001 \001(\0132#.profa"
      "nedb.protobuf.StorableMessage\0225\n\010childre"
      "n\030\002 \003(\0132#.profanedb.protobuf.MessageTree"
      "NodeBU\n\026com.profanedb.protobufZ gitlab.c"
      "om/profanedb/protobuf/db\242\002\003PDB\252\002\022Profane"
      "DB.Protobufb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 459);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "profanedb/protobuf/storage.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_profanedb_2fprotobuf_2fstorage_2eproto
namespace profanedb {
namespace protobuf {

// ===================================================================

void Key::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Key::kMessageTypeFieldNumber;
const int Key::kFieldFieldNumber;
const int Key::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Key::Key()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_profanedb_2fprotobuf_2fstorage_2eproto::InitDefaultsKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:profanedb.protobuf.Key)
}
Key::Key(const Key& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message_type().size() > 0) {
    message_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_type_);
  }
  field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.field().size() > 0) {
    field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:profanedb.protobuf.Key)
}

void Key::SharedCtor() {
  message_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Key::~Key() {
  // @@protoc_insertion_point(destructor:profanedb.protobuf.Key)
  SharedDtor();
}

void Key::SharedDtor() {
  message_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Key::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Key::descriptor() {
  ::protobuf_profanedb_2fprotobuf_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_profanedb_2fprotobuf_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Key& Key::default_instance() {
  ::protobuf_profanedb_2fprotobuf_2fstorage_2eproto::InitDefaultsKey();
  return *internal_default_instance();
}

Key* Key::New(::google::protobuf::Arena* arena) const {
  Key* n = new Key;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Key::Clear() {
// @@protoc_insertion_point(message_clear_start:profanedb.protobuf.Key)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Key::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:profanedb.protobuf.Key)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message_type().data(), static_cast<int>(this->message_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "profanedb.protobuf.Key.message_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string field = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->field().data(), static_cast<int>(this->field().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "profanedb.protobuf.Key.field"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:profanedb.protobuf.Key)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:profanedb.protobuf.Key)
  return false;
#undef DO_
}

void Key::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:profanedb.protobuf.Key)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message_type = 1;
  if (this->message_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message_type().data(), static_cast<int>(this->message_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "profanedb.protobuf.Key.message_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message_type(), output);
  }

  // string field = 2;
  if (this->field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field().data(), static_cast<int>(this->field().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "profanedb.protobuf.Key.field");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->field(), output);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:profanedb.protobuf.Key)
}

::google::protobuf::uint8* Key::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:profanedb.protobuf.Key)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message_type = 1;
  if (this->message_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message_type().data(), static_cast<int>(this->message_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "profanedb.protobuf.Key.message_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message_type(), target);
  }

  // string field = 2;
  if (this->field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field().data(), static_cast<int>(this->field().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "profanedb.protobuf.Key.field");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->field(), target);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:profanedb.protobuf.Key)
  return target;
}

size_t Key::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:profanedb.protobuf.Key)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message_type = 1;
  if (this->message_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message_type());
  }

  // string field = 2;
  if (this->field().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field());
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Key::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:profanedb.protobuf.Key)
  GOOGLE_DCHECK_NE(&from, this);
  const Key* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Key>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:profanedb.protobuf.Key)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:profanedb.protobuf.Key)
    MergeFrom(*source);
  }
}

void Key::MergeFrom(const Key& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:profanedb.protobuf.Key)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message_type().size() > 0) {

    message_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_type_);
  }
  if (from.field().size() > 0) {

    field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void Key::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:profanedb.protobuf.Key)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Key::CopyFrom(const Key& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:profanedb.protobuf.Key)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Key::IsInitialized() const {
  return true;
}

void Key::Swap(Key* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Key::InternalSwap(Key* other) {
  using std::swap;
  message_type_.Swap(&other->message_type_);
  field_.Swap(&other->field_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Key::GetMetadata() const {
  protobuf_profanedb_2fprotobuf_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_profanedb_2fprotobuf_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StorableMessage::InitAsDefaultInstance() {
  ::profanedb::protobuf::_StorableMessage_default_instance_._instance.get_mutable()->key_ = const_cast< ::profanedb::protobuf::Key*>(
      ::profanedb::protobuf::Key::internal_default_instance());
  ::profanedb::protobuf::_StorableMessage_default_instance_._instance.get_mutable()->payload_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void StorableMessage::clear_payload() {
  if (GetArenaNoVirtual() == NULL && payload_ != NULL) {
    delete payload_;
  }
  payload_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorableMessage::kKeyFieldNumber;
const int StorableMessage::kPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorableMessage::StorableMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_profanedb_2fprotobuf_2fstorage_2eproto::InitDefaultsStorableMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:profanedb.protobuf.StorableMessage)
}
StorableMessage::StorableMessage(const StorableMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::profanedb::protobuf::Key(*from.key_);
  } else {
    key_ = NULL;
  }
  if (from.has_payload()) {
    payload_ = new ::google::protobuf::Any(*from.payload_);
  } else {
    payload_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:profanedb.protobuf.StorableMessage)
}

void StorableMessage::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&payload_) -
      reinterpret_cast<char*>(&key_)) + sizeof(payload_));
  _cached_size_ = 0;
}

StorableMessage::~StorableMessage() {
  // @@protoc_insertion_point(destructor:profanedb.protobuf.StorableMessage)
  SharedDtor();
}

void StorableMessage::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
  if (this != internal_default_instance()) delete payload_;
}

void StorableMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorableMessage::descriptor() {
  ::protobuf_profanedb_2fprotobuf_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_profanedb_2fprotobuf_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StorableMessage& StorableMessage::default_instance() {
  ::protobuf_profanedb_2fprotobuf_2fstorage_2eproto::InitDefaultsStorableMessage();
  return *internal_default_instance();
}

StorableMessage* StorableMessage::New(::google::protobuf::Arena* arena) const {
  StorableMessage* n = new StorableMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StorableMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:profanedb.protobuf.StorableMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  if (GetArenaNoVirtual() == NULL && payload_ != NULL) {
    delete payload_;
  }
  payload_ = NULL;
  _internal_metadata_.Clear();
}

bool StorableMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:profanedb.protobuf.StorableMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .profanedb.protobuf.Key key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any payload = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:profanedb.protobuf.StorableMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:profanedb.protobuf.StorableMessage)
  return false;
#undef DO_
}

void StorableMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:profanedb.protobuf.StorableMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .profanedb.protobuf.Key key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->key_, output);
  }

  // .google.protobuf.Any payload = 2;
  if (this->has_payload()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->payload_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:profanedb.protobuf.StorableMessage)
}

::google::protobuf::uint8* StorableMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:profanedb.protobuf.StorableMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .profanedb.protobuf.Key key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->key_, deterministic, target);
  }

  // .google.protobuf.Any payload = 2;
  if (this->has_payload()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->payload_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:profanedb.protobuf.StorableMessage)
  return target;
}

size_t StorableMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:profanedb.protobuf.StorableMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .profanedb.protobuf.Key key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->key_);
  }

  // .google.protobuf.Any payload = 2;
  if (this->has_payload()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->payload_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorableMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:profanedb.protobuf.StorableMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const StorableMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorableMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:profanedb.protobuf.StorableMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:profanedb.protobuf.StorableMessage)
    MergeFrom(*source);
  }
}

void StorableMessage::MergeFrom(const StorableMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:profanedb.protobuf.StorableMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::profanedb::protobuf::Key::MergeFrom(from.key());
  }
  if (from.has_payload()) {
    mutable_payload()->::google::protobuf::Any::MergeFrom(from.payload());
  }
}

void StorableMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:profanedb.protobuf.StorableMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorableMessage::CopyFrom(const StorableMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:profanedb.protobuf.StorableMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorableMessage::IsInitialized() const {
  return true;
}

void StorableMessage::Swap(StorableMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorableMessage::InternalSwap(StorableMessage* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(payload_, other->payload_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StorableMessage::GetMetadata() const {
  protobuf_profanedb_2fprotobuf_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_profanedb_2fprotobuf_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageTreeNode::InitAsDefaultInstance() {
  ::profanedb::protobuf::_MessageTreeNode_default_instance_._instance.get_mutable()->message_ = const_cast< ::profanedb::protobuf::StorableMessage*>(
      ::profanedb::protobuf::StorableMessage::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageTreeNode::kMessageFieldNumber;
const int MessageTreeNode::kChildrenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageTreeNode::MessageTreeNode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_profanedb_2fprotobuf_2fstorage_2eproto::InitDefaultsMessageTreeNode();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:profanedb.protobuf.MessageTreeNode)
}
MessageTreeNode::MessageTreeNode(const MessageTreeNode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      children_(from.children_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_message()) {
    message_ = new ::profanedb::protobuf::StorableMessage(*from.message_);
  } else {
    message_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:profanedb.protobuf.MessageTreeNode)
}

void MessageTreeNode::SharedCtor() {
  message_ = NULL;
  _cached_size_ = 0;
}

MessageTreeNode::~MessageTreeNode() {
  // @@protoc_insertion_point(destructor:profanedb.protobuf.MessageTreeNode)
  SharedDtor();
}

void MessageTreeNode::SharedDtor() {
  if (this != internal_default_instance()) delete message_;
}

void MessageTreeNode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageTreeNode::descriptor() {
  ::protobuf_profanedb_2fprotobuf_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_profanedb_2fprotobuf_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageTreeNode& MessageTreeNode::default_instance() {
  ::protobuf_profanedb_2fprotobuf_2fstorage_2eproto::InitDefaultsMessageTreeNode();
  return *internal_default_instance();
}

MessageTreeNode* MessageTreeNode::New(::google::protobuf::Arena* arena) const {
  MessageTreeNode* n = new MessageTreeNode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageTreeNode::Clear() {
// @@protoc_insertion_point(message_clear_start:profanedb.protobuf.MessageTreeNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  children_.Clear();
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
  _internal_metadata_.Clear();
}

bool MessageTreeNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:profanedb.protobuf.MessageTreeNode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .profanedb.protobuf.StorableMessage message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .profanedb.protobuf.MessageTreeNode children = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_children()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:profanedb.protobuf.MessageTreeNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:profanedb.protobuf.MessageTreeNode)
  return false;
#undef DO_
}

void MessageTreeNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:profanedb.protobuf.MessageTreeNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .profanedb.protobuf.StorableMessage message = 1;
  if (this->has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->message_, output);
  }

  // repeated .profanedb.protobuf.MessageTreeNode children = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->children_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->children(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:profanedb.protobuf.MessageTreeNode)
}

::google::protobuf::uint8* MessageTreeNode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:profanedb.protobuf.MessageTreeNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .profanedb.protobuf.StorableMessage message = 1;
  if (this->has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->message_, deterministic, target);
  }

  // repeated .profanedb.protobuf.MessageTreeNode children = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->children_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->children(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:profanedb.protobuf.MessageTreeNode)
  return target;
}

size_t MessageTreeNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:profanedb.protobuf.MessageTreeNode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .profanedb.protobuf.MessageTreeNode children = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->children_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->children(static_cast<int>(i)));
    }
  }

  // .profanedb.protobuf.StorableMessage message = 1;
  if (this->has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->message_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageTreeNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:profanedb.protobuf.MessageTreeNode)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageTreeNode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageTreeNode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:profanedb.protobuf.MessageTreeNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:profanedb.protobuf.MessageTreeNode)
    MergeFrom(*source);
  }
}

void MessageTreeNode::MergeFrom(const MessageTreeNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:profanedb.protobuf.MessageTreeNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  children_.MergeFrom(from.children_);
  if (from.has_message()) {
    mutable_message()->::profanedb::protobuf::StorableMessage::MergeFrom(from.message());
  }
}

void MessageTreeNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:profanedb.protobuf.MessageTreeNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageTreeNode::CopyFrom(const MessageTreeNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:profanedb.protobuf.MessageTreeNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageTreeNode::IsInitialized() const {
  return true;
}

void MessageTreeNode::Swap(MessageTreeNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageTreeNode::InternalSwap(MessageTreeNode* other) {
  using std::swap;
  children_.InternalSwap(&other->children_);
  swap(message_, other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageTreeNode::GetMetadata() const {
  protobuf_profanedb_2fprotobuf_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_profanedb_2fprotobuf_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace profanedb

// @@protoc_insertion_point(global_scope)
